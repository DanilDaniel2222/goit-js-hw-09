{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,CAACN,WAAUC,UAEfM,EAAI,CAACP,WAAUC,S,GAEhBA,E,IAlBPQ,KAAO,CACLC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,WAiBjCH,KAAKC,KAAKO,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOZ,KAAKI,WAAWS,OAC/BC,EAAOF,OAAOZ,KAAKK,UAAUQ,OAC7BE,EAASH,OAAOZ,KAAKM,YAAYO,OAEvC,GAAGF,EAAQ,GAAKG,EAAO,GAAKC,EAAS,EACnC3B,EAAA4B,OAAOC,QAAQ,iCAEZ,GAAsB,IAAnBL,OAAOG,GACb3B,EAAA4B,OAAOC,QAAQ,iCAGf,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IACzB5B,EAAc4B,EAAGP,EAAQG,EAAOI,GAC/BC,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACnBJ,EAAA4B,OAAOK,QAAQ,uBAA4CC,OAAnB/B,EAAW,EAAE,QAAY+B,OAAN9B,EAAM,M,IAEhE+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACpBJ,EAAA4B,OAAOQ,QAAQ,sBAAyCF,OAAnB/B,EAAW,EAAE,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n  form: document.querySelector('form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button'),\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      } else {\n        rej({position, delay})\n      }\n    }, delay)\n  })\n};\n\nrefs.form.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(event){\n  event.preventDefault();\n\n  const delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  if(delay < 0 || step < 0 || amount < 0){\n    Notify.warning('Enter number more than 0')\n  }\n  else if(Number(amount) === 0){\n    Notify.warning('Enter number more than 0')\n  }\n  else{\n    for(let i = 0; i < amount; i++){\n      createPromise(i, delay + step * i)\n      .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n      }\n  }\n}\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","refs","form","document","querySelector","delayInput","stepInput","amountInput","button","addEventListener","event","preventDefault","delay1","Number","value","step","amount","Notify","warning","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.2ca8f21b.js.map"}