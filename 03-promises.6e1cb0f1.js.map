{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,WAGjC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EAAI,C,SAACN,E,MAAUC,IAEfM,EAAI,C,SAACP,E,MAAUC,GAAO,GAEvBA,EAAM,G,CAIbV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOtB,EAAKI,WAAWmB,OAC/BC,EAAOF,OAAOtB,EAAKK,UAAUkB,OAC7BE,EAASH,OAAOtB,EAAKM,YAAYiB,OAEvC,GAAGF,EAAQ,GAAKG,EAAO,GAAKC,EAAS,EACnC3B,EAAA4B,OAAOC,QAAQ,iCAEZ,GAAsB,IAAnBL,OAAOG,GACb3B,EAAA4B,OAAOC,QAAQ,iCAGf,IAAI,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,IACzBpB,EAAcoB,EAAGP,EAAQG,EAAOI,GAC/BC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACnBZ,EAAA4B,OAAOI,QAAQ,uBAAqBrB,EAAY,QAASC,MAAU,IAElEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACpBZ,EAAA4B,OAAOM,QAAQ,sBAAoBvB,EAAU,QAASC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  button: document.querySelector('button'),\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      } else {\n        rej({position, delay})\n      }\n    }, delay)\n  })\n};\n\nrefs.form.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(event){\n  event.preventDefault();\n\n  const delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n  const amount = Number(refs.amountInput.value);\n\n  if(delay < 0 || step < 0 || amount < 0){\n    Notify.warning('Enter number more than 0')\n  }\n  else if(Number(amount) === 0){\n    Notify.warning('Enter number more than 0')\n  }\n  else{\n    for(let i = 0; i < amount; i++){\n      createPromise(i, delay + step * i)\n      .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n      });\n      }\n  }\n}\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","button","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","Notify","warning","i","then","success","catch","failure"],"version":3,"file":"03-promises.6e1cb0f1.js.map"}